AWSTemplateFormatVersion: "2010-09-09"
Resources:
  QueueSQS:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 3
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 600
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 30
  BucketS3:
    Type: "AWS::S3::Bucket"
    DependsOn: SQSQueuePolicy
    Properties:
      PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
      NotificationConfiguration:
        QueueConfigurations:
          - Event: "s3:ObjectCreated:*"
            Queue: !GetAtt QueueSQS.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: "prefix"
                    Value: "tweets/"
                  - Name: "suffix"
                    Value: ".json"
  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              AWS: "*"
            Action: 
              - sqs:*
            Resource: !GetAtt QueueSQS.Arn
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues: 
        - !Ref QueueSQS
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref BucketS3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt 'BucketS3.Arn'
              - !Sub '${BucketS3.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
  LambdaFunctionTweets:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: mlops-bot-tweets
      Role: !GetAtt LambdaFunctionTweetsRole.Arn
      PackageType: Image
      Code:
        ImageUri: 885248014373.dkr.ecr.us-east-1.amazonaws.com/mlopsbot/tweets:latest
      Timeout: 30
  LambdaFunctionTweetsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: mlops-bot-tweets-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "cloudwatch:*"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "events:*"
                  - "iam:GetPolicy"
                  - "iam:GetPolicyVersion"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PassRole"
                  - "kms:ListAliases"
                  - "lambda:*"
                  - "logs:*"
                  - "s3:*"
                  - "secretsmanager:*"
                  - "sns:ListSubscriptions"
                  - "sns:ListSubscriptionsByTopic"
                  - "sns:ListTopics"
                  - "sns:Publish"
                  - "sns:Subscribe"
                  - "sns:Unsubscribe"
                  - "sqs:ListQueues"
                  - "sqs:SendMessage"
                  - "tag:GetResources"
                Resource: '*'
              - Effect: Allow
                Action: 
                  - "ssm:GetParameter"
                  - "ssm:PutParameter"
                Resource: "arn:aws:ssm:us-east-1:885248014373:parameter/mlops-bot-since-id"
      MaxSessionDuration: 3600 


