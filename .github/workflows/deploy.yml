name: ML Lambda Container Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-tweet:
    runs-on: ubuntu-20.04
    steps:      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from your account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and Push Image - Get Tweets
        run: |
          export REPO_NAME_TWEETS=mlopsbot/tweets
          aws ecr describe-repositories --repository-names ${REPO_NAME_TWEETS} || aws ecr create-repository --repository-name ${REPO_NAME_TWEETS}
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          cd lambdaTweet && docker build -t ${REPO_NAME_TWEETS} . && cd ..
          docker tag ${REPO_NAME_TWEETS}:latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${REPO_NAME_TWEETS}:latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${REPO_NAME_TWEETS}:latest

  build-retweet:
    runs-on: ubuntu-20.04
    steps:      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from your account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and Push Image - Retweets
        run: |
          export REPO_NAME_RETWEETS=mlopsbot/retweets
          aws ecr describe-repositories --repository-names ${REPO_NAME_RETWEETS} || aws ecr create-repository --repository-name ${REPO_NAME_RETWEETS}
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          cd lambdaRetweet && docker build -t ${REPO_NAME_RETWEETS} . && cd ..
          docker tag ${REPO_NAME_RETWEETS}:latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${REPO_NAME_RETWEETS}:latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${REPO_NAME_RETWEETS}:latest

  deploy-tweet:
    needs: [build-tweet, build-retweet]
    runs-on: ubuntu-20.04
    steps:      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from your account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: Create or update lambda function
        run: | 
          pip install boto3
          shopt -s expand_aliases
          alias setblahblahenva="eval $(python digest.py)"
          alias setblahblahenvab="eval $(python digest2.py)"
          setblahblahenva
          setblahblahenvab
          echo $DIGEST_TWEET
          echo $DIGEST_RETWEET
          aws cloudformation deploy \
            --stack-name mlops-bot \
            --template-file cloudformation.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides DigestTweet=$DIGEST_TWEET DigestRetweet=$DIGEST_RETWEET
